#!bash
#
# To enable the completions either:
#  - place this file in /etc/bash_completion.d
#  or
#  - copy this file and add the line below to your .bashrc after
#    bash completion features are loaded
#     . doquer.bash
#
## ripped from docker bash completion


__doquer_q()
{
	doquer 2>/dev/null "$@"
}

__docker_q_DISABLE()
{
	docker 2>/dev/null "$@"
}

__doquer_images_all_OLD()
{
	local images
	images="$( docker images -q )"
	COMPREPLY=( $( compgen -W "$images" -- "$cur" ) )
}

__doquer_images_all()
{
	local repos="$( __docker_q images | awk 'NR>1{print $1}' | grep -v '^<none>$' )"
	COMPREPLY=( $( compgen -W "$repos" -- "$cur" ) )
}

__doquer_containers_exclude()
{
	local containers="$( __doquer_q show -q )"
	COMPREPLY=( $( compgen -W "$containers" -- "$cur" ) )
}

__doquer_containers_all()
{
	local containers="$( __docker_q ps -a -q )"
	local names="$( __docker_q inspect --format '{{.Name}}' $containers | sed 's,^/,,' )"
	COMPREPLY=( $( compgen -W "$names $containers" -- "$cur" ) )
}

__doquer_containers_running()
{
	local containers="$( __docker_q ps -q )"
	local names="$( __docker_q inspect --format '{{.Name}}' $containers | sed 's,^/,,' )"
	COMPREPLY=( $( compgen -W "$names $containers" -- "$cur" ) )
}

__doquer_containers_stopped()
{
	local containers="$( { __docker_q ps -a -q; __docker_q ps -q; } | sort | uniq -u )"
	local names="$( __docker_q inspect --format '{{.Name}}' $containers | sed 's,^/,,' )"
	COMPREPLY=( $( compgen -W "$names $containers" -- "$cur" ) )
}

_doquer_lock()
{
	__doquer_containers_all
}

_doquer_unlock()
{
	__doquer_containers_exclude
}

_doquer_integrity()
{
	return
}

_doquer_show()
{
	case "$cur" in
		*)
			COMPREPLY=( $( compgen -W "-q" -- "$cur" ) )
			;;
	esac
}

_doquer_rm()
{
	__doquer_containers_all
}

_doquer_rmall()
{
	return
}

_doquer_rmi()
{
	__doquer_images_all
}

_doquer_rmiall()
{
	return
}

_doquer_build()
{
	_filedir
}

_doquer_cleanbuild()
{
	_filedir
}

_doquer_run()
{
	case "$cur" in
		*)
			COMPREPLY=( $( compgen -W "-f" -- "$cur" ) )
			;;
	esac
}

_doquer_runtmp()
{
	_filedir
}

_doquer_conf()
{
	_filedir
}

_doquer_attach()
{
	__doquer_containers_running
}

_doquer_pipework()
{
	__doquer_containers_running
}

_doquer_start()
{
	__doquer_containers_stopped
}

_doquer_version()
{
	return
}

_doquer_doquer()
{
	case "$prev" in
		-H)
			return
			;;
		*)
			;;
	esac

	case "$cur" in
		-*)
			COMPREPLY=( $( compgen -W "-H" -- "$cur" ) )
			;;
		*)
			COMPREPLY=( $( compgen -W "$commands help" -- "$cur" ) )
			;;
	esac
}

_doquer()
{
	local commands="
			lock
			unlock
			integrity
			show
			rm
			rmall
			rmi
			rmiall
			build
			cleanbuild
			run
			runtmp
			conf
			attach
			pipework
			start
			version
		"

	COMPREPLY=()
	local cur prev words cword
	_get_comp_words_by_ref -n : cur prev words cword

	local command='doquer'
	local counter=1
	while [ $counter -lt $cword ]; do
		case "${words[$counter]}" in
			-H)
				(( counter++ ))
				;;
			-*)
				;;
			*)
				command="${words[$counter]}"
				cpos=$counter
				(( cpos++ ))
				break
				;;
		esac
		(( counter++ ))
	done

	local completions_func=_doquer_${command}
	declare -F $completions_func >/dev/null && $completions_func

	return 0
}

complete -F _doquer doquer
